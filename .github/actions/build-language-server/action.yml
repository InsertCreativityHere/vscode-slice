name: Build Language Server

inputs:
  cargo-build-args:
    description: "Cargo Build Args"
    required: false
    default: ""
  target:
    description: "The target platform"
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - name: ðŸ“¦ Cargo Cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          server/target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    - name: Install Cross Tools
      if: ${{ inputs.target == 'aarch64-unknown-linux-gnu' }}
      run: sudo apt update && sudo apt install gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu --yes
      shell: bash
    - name: Rust Toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        targets: ${{ inputs.target }}
    - name: Build Slice Compiler
      env:
        CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
      run: |
        cargo build --manifest-path server/Cargo.toml ${{ inputs.cargo-build-args }} --target ${{ inputs.target }}
      shell: bash
